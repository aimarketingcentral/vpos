// Autogenerated from Pigeon (v10.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#ifndef PIGEON_POSLINKPED_H_
#define PIGEON_POSLINKPED_H_
#include <flutter/basic_message_channel.h>
#include <flutter/binary_messenger.h>
#include <flutter/encodable_value.h>
#include <flutter/standard_message_codec.h>

#include <map>
#include <optional>
#include <string>

namespace POSLinkPed {


// Generated class from Pigeon.

class FlutterError {
 public:
  explicit FlutterError(const std::string& code)
    : code_(code) {}
  explicit FlutterError(const std::string& code, const std::string& message)
    : code_(code), message_(message) {}
  explicit FlutterError(const std::string& code, const std::string& message, const flutter::EncodableValue& details)
    : code_(code), message_(message), details_(details) {}

  const std::string& code() const { return code_; }
  const std::string& message() const { return message_; }
  const flutter::EncodableValue& details() const { return details_; }

 private:
  std::string code_;
  std::string message_;
  flutter::EncodableValue details_;
};

template<class T> class ErrorOr {
 public:
  ErrorOr(const T& rhs) : v_(rhs) {}
  ErrorOr(const T&& rhs) : v_(std::move(rhs)) {}
  ErrorOr(const FlutterError& rhs) : v_(rhs) {}
  ErrorOr(const FlutterError&& rhs) : v_(std::move(rhs)) {}

  bool has_error() const { return std::holds_alternative<FlutterError>(v_); }
  const T& value() const { return std::get<T>(v_); };
  const FlutterError& error() const { return std::get<FlutterError>(v_); };

 private:
  friend class POSLinkPedApi;
  ErrorOr() = default;
  T TakeValue() && { return std::get<T>(std::move(v_)); }

  std::variant<T, FlutterError> v_;
};


enum class PedKeyType {
  NotSet = 0,
  MasterKey = 1,
  SessionKey = 2,
  DesDukptKey = 3,
  AesDukptKey = 4
};

enum class PedDestinationKeyType {
  NotSet = 0,
  Tpk = 1,
  Tak = 2,
  Tdk = 3
};

enum class PedCheckMode {
  NotSet = 0,
  NoKcvCheck = 1,
  DesOrTdesEncryptionAndCheckKcv = 2
};

enum class PedMacWorkMode {
  NotSet = 0,
  AnsiX99 = 1,
  HypercomFastMode = 2,
  AnsiX919 = 3,
  Sha1 = 4,
  Sha256 = 5
};

enum class PedMacCalculationKeyType {
  NotSet = 0,
  Tak = 1,
  DesDukptKey = 2,
  AesDukptKey = 3,
  Aes192DukptKey = 4,
  Aes256DukptKey = 5
};

enum class PedKsnFlag {
  NotSet = 0,
  NotIncrease = 1,
  Increase = 2
};

// Generated class from Pigeon that represents data sent in messages.
class PedMacCalculationRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  PedMacCalculationRequest();

  // Constructs an object setting all fields.
  explicit PedMacCalculationRequest(
    const std::string* input_data,
    const std::string* encryption_bitmap,
    const std::string* mac_key_slot,
    const PedMacWorkMode* mac_work_mode,
    const std::string* encryption_key_slot,
    const std::string* padding_char,
    const PedMacCalculationKeyType* mac_key_type,
    const PedKsnFlag* ksn_flag);

  const std::string* input_data() const;
  void set_input_data(const std::string_view* value_arg);
  void set_input_data(std::string_view value_arg);

  const std::string* encryption_bitmap() const;
  void set_encryption_bitmap(const std::string_view* value_arg);
  void set_encryption_bitmap(std::string_view value_arg);

  const std::string* mac_key_slot() const;
  void set_mac_key_slot(const std::string_view* value_arg);
  void set_mac_key_slot(std::string_view value_arg);

  const PedMacWorkMode* mac_work_mode() const;
  void set_mac_work_mode(const PedMacWorkMode* value_arg);
  void set_mac_work_mode(const PedMacWorkMode& value_arg);

  const std::string* encryption_key_slot() const;
  void set_encryption_key_slot(const std::string_view* value_arg);
  void set_encryption_key_slot(std::string_view value_arg);

  const std::string* padding_char() const;
  void set_padding_char(const std::string_view* value_arg);
  void set_padding_char(std::string_view value_arg);

  const PedMacCalculationKeyType* mac_key_type() const;
  void set_mac_key_type(const PedMacCalculationKeyType* value_arg);
  void set_mac_key_type(const PedMacCalculationKeyType& value_arg);

  const PedKsnFlag* ksn_flag() const;
  void set_ksn_flag(const PedKsnFlag* value_arg);
  void set_ksn_flag(const PedKsnFlag& value_arg);


 private:
  static PedMacCalculationRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> input_data_;
  std::optional<std::string> encryption_bitmap_;
  std::optional<std::string> mac_key_slot_;
  std::optional<PedMacWorkMode> mac_work_mode_;
  std::optional<std::string> encryption_key_slot_;
  std::optional<std::string> padding_char_;
  std::optional<PedMacCalculationKeyType> mac_key_type_;
  std::optional<PedKsnFlag> ksn_flag_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedSessionKeyInjectionRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  PedSessionKeyInjectionRequest();

  // Constructs an object setting all fields.
  explicit PedSessionKeyInjectionRequest(
    const std::string* source_key_type,
    const std::string* source_key_index,
    const PedDestinationKeyType* destination_key_type,
    const std::string* destination_key_index,
    const std::string* destination_key_value,
    const PedCheckMode* check_mode,
    const std::string* check_buffer);

  const std::string* source_key_type() const;
  void set_source_key_type(const std::string_view* value_arg);
  void set_source_key_type(std::string_view value_arg);

  const std::string* source_key_index() const;
  void set_source_key_index(const std::string_view* value_arg);
  void set_source_key_index(std::string_view value_arg);

  const PedDestinationKeyType* destination_key_type() const;
  void set_destination_key_type(const PedDestinationKeyType* value_arg);
  void set_destination_key_type(const PedDestinationKeyType& value_arg);

  const std::string* destination_key_index() const;
  void set_destination_key_index(const std::string_view* value_arg);
  void set_destination_key_index(std::string_view value_arg);

  const std::string* destination_key_value() const;
  void set_destination_key_value(const std::string_view* value_arg);
  void set_destination_key_value(std::string_view value_arg);

  const PedCheckMode* check_mode() const;
  void set_check_mode(const PedCheckMode* value_arg);
  void set_check_mode(const PedCheckMode& value_arg);

  const std::string* check_buffer() const;
  void set_check_buffer(const std::string_view* value_arg);
  void set_check_buffer(std::string_view value_arg);


 private:
  static PedSessionKeyInjectionRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> source_key_type_;
  std::optional<std::string> source_key_index_;
  std::optional<PedDestinationKeyType> destination_key_type_;
  std::optional<std::string> destination_key_index_;
  std::optional<std::string> destination_key_value_;
  std::optional<PedCheckMode> check_mode_;
  std::optional<std::string> check_buffer_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedIncreaseKsnRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  PedIncreaseKsnRequest();

  // Constructs an object setting all fields.
  explicit PedIncreaseKsnRequest(
    const PedKeyType* key_type,
    const std::string* key_slot);

  const PedKeyType* key_type() const;
  void set_key_type(const PedKeyType* value_arg);
  void set_key_type(const PedKeyType& value_arg);

  const std::string* key_slot() const;
  void set_key_slot(const std::string_view* value_arg);
  void set_key_slot(std::string_view value_arg);


 private:
  static PedIncreaseKsnRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<PedKeyType> key_type_;
  std::optional<std::string> key_slot_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedGetPedInformationRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  PedGetPedInformationRequest();

  // Constructs an object setting all fields.
  explicit PedGetPedInformationRequest(
    const PedKeyType* key_type,
    const std::string* key_slot);

  const PedKeyType* key_type() const;
  void set_key_type(const PedKeyType* value_arg);
  void set_key_type(const PedKeyType& value_arg);

  const std::string* key_slot() const;
  void set_key_slot(const std::string_view* value_arg);
  void set_key_slot(std::string_view value_arg);


 private:
  static PedGetPedInformationRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<PedKeyType> key_type_;
  std::optional<std::string> key_slot_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedMasterSessionKeyInformation {
 public:
  // Constructs an object setting all non-nullable fields.
  PedMasterSessionKeyInformation();

  // Constructs an object setting all fields.
  explicit PedMasterSessionKeyInformation(
    const std::string* key_slot,
    const std::string* kcv);

  const std::string* key_slot() const;
  void set_key_slot(const std::string_view* value_arg);
  void set_key_slot(std::string_view value_arg);

  const std::string* kcv() const;
  void set_kcv(const std::string_view* value_arg);
  void set_kcv(std::string_view value_arg);


 private:
  static PedMasterSessionKeyInformation FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> key_slot_;
  std::optional<std::string> kcv_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedDukptKeyInformation {
 public:
  // Constructs an object setting all non-nullable fields.
  PedDukptKeyInformation();

  // Constructs an object setting all fields.
  explicit PedDukptKeyInformation(
    const std::string* key_slot,
    const std::string* ksn,
    const std::string* kcv);

  const std::string* key_slot() const;
  void set_key_slot(const std::string_view* value_arg);
  void set_key_slot(std::string_view value_arg);

  const std::string* ksn() const;
  void set_ksn(const std::string_view* value_arg);
  void set_ksn(std::string_view value_arg);

  const std::string* kcv() const;
  void set_kcv(const std::string_view* value_arg);
  void set_kcv(std::string_view value_arg);


 private:
  static PedDukptKeyInformation FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> key_slot_;
  std::optional<std::string> ksn_;
  std::optional<std::string> kcv_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedGetPedInformationResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  PedGetPedInformationResponse();

  // Constructs an object setting all fields.
  explicit PedGetPedInformationResponse(
    const std::string* response_code,
    const std::string* response_message,
    const std::string* master_available_key_slot_count,
    const std::string* session_available_key_slot_count,
    const std::string* dukpt_available_key_slot_count,
    const std::string* aes_dukpt_available_key_slot_count,
    const flutter::EncodableList* tmk,
    const flutter::EncodableList* tpk,
    const flutter::EncodableList* tak,
    const flutter::EncodableList* tdk,
    const flutter::EncodableList* dukpt_key,
    const flutter::EncodableList* aes_dukpt_key);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);

  const std::string* master_available_key_slot_count() const;
  void set_master_available_key_slot_count(const std::string_view* value_arg);
  void set_master_available_key_slot_count(std::string_view value_arg);

  const std::string* session_available_key_slot_count() const;
  void set_session_available_key_slot_count(const std::string_view* value_arg);
  void set_session_available_key_slot_count(std::string_view value_arg);

  const std::string* dukpt_available_key_slot_count() const;
  void set_dukpt_available_key_slot_count(const std::string_view* value_arg);
  void set_dukpt_available_key_slot_count(std::string_view value_arg);

  const std::string* aes_dukpt_available_key_slot_count() const;
  void set_aes_dukpt_available_key_slot_count(const std::string_view* value_arg);
  void set_aes_dukpt_available_key_slot_count(std::string_view value_arg);

  const flutter::EncodableList* tmk() const;
  void set_tmk(const flutter::EncodableList* value_arg);
  void set_tmk(const flutter::EncodableList& value_arg);

  const flutter::EncodableList* tpk() const;
  void set_tpk(const flutter::EncodableList* value_arg);
  void set_tpk(const flutter::EncodableList& value_arg);

  const flutter::EncodableList* tak() const;
  void set_tak(const flutter::EncodableList* value_arg);
  void set_tak(const flutter::EncodableList& value_arg);

  const flutter::EncodableList* tdk() const;
  void set_tdk(const flutter::EncodableList* value_arg);
  void set_tdk(const flutter::EncodableList& value_arg);

  const flutter::EncodableList* dukpt_key() const;
  void set_dukpt_key(const flutter::EncodableList* value_arg);
  void set_dukpt_key(const flutter::EncodableList& value_arg);

  const flutter::EncodableList* aes_dukpt_key() const;
  void set_aes_dukpt_key(const flutter::EncodableList* value_arg);
  void set_aes_dukpt_key(const flutter::EncodableList& value_arg);


 private:
  static PedGetPedInformationResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;
  std::optional<std::string> master_available_key_slot_count_;
  std::optional<std::string> session_available_key_slot_count_;
  std::optional<std::string> dukpt_available_key_slot_count_;
  std::optional<std::string> aes_dukpt_available_key_slot_count_;
  std::optional<flutter::EncodableList> tmk_;
  std::optional<flutter::EncodableList> tpk_;
  std::optional<flutter::EncodableList> tak_;
  std::optional<flutter::EncodableList> tdk_;
  std::optional<flutter::EncodableList> dukpt_key_;
  std::optional<flutter::EncodableList> aes_dukpt_key_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedMacCalculationResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  PedMacCalculationResponse();

  // Constructs an object setting all fields.
  explicit PedMacCalculationResponse(
    const std::string* response_code,
    const std::string* response_message,
    const std::string* result_data,
    const std::string* ksn);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);

  const std::string* result_data() const;
  void set_result_data(const std::string_view* value_arg);
  void set_result_data(std::string_view value_arg);

  const std::string* ksn() const;
  void set_ksn(const std::string_view* value_arg);
  void set_ksn(std::string_view value_arg);


 private:
  static PedMacCalculationResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;
  std::optional<std::string> result_data_;
  std::optional<std::string> ksn_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedSessionKeyInjectionResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  PedSessionKeyInjectionResponse();

  // Constructs an object setting all fields.
  explicit PedSessionKeyInjectionResponse(
    const std::string* response_code,
    const std::string* response_message);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);


 private:
  static PedSessionKeyInjectionResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;

};


// Generated class from Pigeon that represents data sent in messages.
class PedIncreaseKsnResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  PedIncreaseKsnResponse();

  // Constructs an object setting all fields.
  explicit PedIncreaseKsnResponse(
    const std::string* response_code,
    const std::string* response_message,
    const std::string* ksn);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);

  const std::string* ksn() const;
  void set_ksn(const std::string_view* value_arg);
  void set_ksn(std::string_view value_arg);


 private:
  static PedIncreaseKsnResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkPedApi;
  friend class POSLinkPedApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;
  std::optional<std::string> ksn_;

};

class POSLinkPedApiCodecSerializer : public flutter::StandardCodecSerializer {
 public:
  POSLinkPedApiCodecSerializer();
  inline static POSLinkPedApiCodecSerializer& GetInstance() {
    static POSLinkPedApiCodecSerializer sInstance;
    return sInstance;
  }

  void WriteValue(
    const flutter::EncodableValue& value,
    flutter::ByteStreamWriter* stream) const override;

 protected:
  flutter::EncodableValue ReadValueOfType(
    uint8_t type,
    flutter::ByteStreamReader* stream) const override;

};

// Generated interface from Pigeon that represents a handler of messages from Flutter.
class POSLinkPedApi {
 public:
  POSLinkPedApi(const POSLinkPedApi&) = delete;
  POSLinkPedApi& operator=(const POSLinkPedApi&) = delete;
  virtual ~POSLinkPedApi() {}
  virtual void GetPedInformation(
    const PedGetPedInformationRequest& req,
    std::function<void(ErrorOr<PedGetPedInformationResponse> reply)> result) = 0;
  virtual void IncreaseKsn(
    const PedIncreaseKsnRequest& req,
    std::function<void(ErrorOr<PedIncreaseKsnResponse> reply)> result) = 0;
  virtual void SessionKeyInjection(
    const PedSessionKeyInjectionRequest& req,
    std::function<void(ErrorOr<PedSessionKeyInjectionResponse> reply)> result) = 0;
  virtual void MacCalculation(
    const PedMacCalculationRequest& req,
    std::function<void(ErrorOr<PedMacCalculationResponse> reply)> result) = 0;

  // The codec used by POSLinkPedApi.
  static const flutter::StandardMessageCodec& GetCodec();
  // Sets up an instance of `POSLinkPedApi` to handle messages through the `binary_messenger`.
  static void SetUp(
    flutter::BinaryMessenger* binary_messenger,
    POSLinkPedApi* api);
  static flutter::EncodableValue WrapError(std::string_view error_message);
  static flutter::EncodableValue WrapError(const FlutterError& error);

 protected:
  POSLinkPedApi() = default;

};
}  // namespace POSLinkPed
#endif  // PIGEON_POSLINKPED_H_
