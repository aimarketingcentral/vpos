// Autogenerated from Pigeon (v10.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#ifndef PIGEON_POSLINKDEVICE_H_
#define PIGEON_POSLINKDEVICE_H_
#include <flutter/basic_message_channel.h>
#include <flutter/binary_messenger.h>
#include <flutter/encodable_value.h>
#include <flutter/standard_message_codec.h>

#include <map>
#include <optional>
#include <string>

namespace POSLinkDevice {


// Generated class from Pigeon.

class FlutterError {
 public:
  explicit FlutterError(const std::string& code)
    : code_(code) {}
  explicit FlutterError(const std::string& code, const std::string& message)
    : code_(code), message_(message) {}
  explicit FlutterError(const std::string& code, const std::string& message, const flutter::EncodableValue& details)
    : code_(code), message_(message), details_(details) {}

  const std::string& code() const { return code_; }
  const std::string& message() const { return message_; }
  const flutter::EncodableValue& details() const { return details_; }

 private:
  std::string code_;
  std::string message_;
  flutter::EncodableValue details_;
};

template<class T> class ErrorOr {
 public:
  ErrorOr(const T& rhs) : v_(rhs) {}
  ErrorOr(const T&& rhs) : v_(std::move(rhs)) {}
  ErrorOr(const FlutterError& rhs) : v_(rhs) {}
  ErrorOr(const FlutterError&& rhs) : v_(std::move(rhs)) {}

  bool has_error() const { return std::holds_alternative<FlutterError>(v_); }
  const T& value() const { return std::get<T>(v_); };
  const FlutterError& error() const { return std::get<FlutterError>(v_); };

 private:
  friend class POSLinkDeviceApi;
  ErrorOr() = default;
  T TakeValue() && { return std::get<T>(std::move(v_)); }

  std::variant<T, FlutterError> v_;
};


enum class DeviceCardInsertStatus {
  NotSet = 0,
  NoCardInserted = 1,
  EmvCardInserted = 2,
  CardInserted = 3
};

enum class DeviceBarcodeType {
  NotSet = 0,
  QrCode = 1,
  TwoDimensionalBarcode = 2,
  ThreeDimensionalBarcode = 3
};

enum class DeviceM1CommandType {
  NotSet = 0,
  Read = 1,
  Write = 2,
  OperateWithIncreaseValue = 3,
  OperateWithDecreaseValue = 4,
  OperateWithBackupValue = 5,
  ReadTheSerialNumber = 6
};

enum class DevicePasswordType {
  NotSet = 0,
  AType = 1,
  BType = 2
};

enum class DeviceReaderType {
  NotSet = 0,
  RearCamera = 1,
  FrontCamera = 2
};

// Generated class from Pigeon that represents data sent in messages.
class DeviceCardInsertDetectionRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  DeviceCardInsertDetectionRequest();

  // Constructs an object setting all fields.
  explicit DeviceCardInsertDetectionRequest(const std::string* class_i_d);

  const std::string* class_i_d() const;
  void set_class_i_d(const std::string_view* value_arg);
  void set_class_i_d(std::string_view value_arg);


 private:
  static DeviceCardInsertDetectionRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<std::string> class_i_d_;

};


// Generated class from Pigeon that represents data sent in messages.
class DevicePrinterRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  DevicePrinterRequest();

  // Constructs an object setting all fields.
  explicit DevicePrinterRequest(
    const std::string* print_copy,
    const std::string* print_data);

  const std::string* print_copy() const;
  void set_print_copy(const std::string_view* value_arg);
  void set_print_copy(std::string_view value_arg);

  const std::string* print_data() const;
  void set_print_data(const std::string_view* value_arg);
  void set_print_data(std::string_view value_arg);


 private:
  static DevicePrinterRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<std::string> print_copy_;
  std::optional<std::string> print_data_;

};


// Generated class from Pigeon that represents data sent in messages.
class DeviceCameraScanRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  DeviceCameraScanRequest();

  // Constructs an object setting all fields.
  explicit DeviceCameraScanRequest(
    const DeviceReaderType* reader,
    const std::string* timeout);

  const DeviceReaderType* reader() const;
  void set_reader(const DeviceReaderType* value_arg);
  void set_reader(const DeviceReaderType& value_arg);

  const std::string* timeout() const;
  void set_timeout(const std::string_view* value_arg);
  void set_timeout(std::string_view value_arg);


 private:
  static DeviceCameraScanRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<DeviceReaderType> reader_;
  std::optional<std::string> timeout_;

};


// Generated class from Pigeon that represents data sent in messages.
class DeviceMifareCardRequest {
 public:
  // Constructs an object setting all non-nullable fields.
  DeviceMifareCardRequest();

  // Constructs an object setting all fields.
  explicit DeviceMifareCardRequest(
    const DeviceM1CommandType* m1_command,
    const std::string* block_number,
    const std::string* password,
    const DevicePasswordType* password_type,
    const std::string* block_value,
    const std::string* update_block_number,
    const std::string* timeout);

  const DeviceM1CommandType* m1_command() const;
  void set_m1_command(const DeviceM1CommandType* value_arg);
  void set_m1_command(const DeviceM1CommandType& value_arg);

  const std::string* block_number() const;
  void set_block_number(const std::string_view* value_arg);
  void set_block_number(std::string_view value_arg);

  const std::string* password() const;
  void set_password(const std::string_view* value_arg);
  void set_password(std::string_view value_arg);

  const DevicePasswordType* password_type() const;
  void set_password_type(const DevicePasswordType* value_arg);
  void set_password_type(const DevicePasswordType& value_arg);

  const std::string* block_value() const;
  void set_block_value(const std::string_view* value_arg);
  void set_block_value(std::string_view value_arg);

  const std::string* update_block_number() const;
  void set_update_block_number(const std::string_view* value_arg);
  void set_update_block_number(std::string_view value_arg);

  const std::string* timeout() const;
  void set_timeout(const std::string_view* value_arg);
  void set_timeout(std::string_view value_arg);


 private:
  static DeviceMifareCardRequest FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<DeviceM1CommandType> m1_command_;
  std::optional<std::string> block_number_;
  std::optional<std::string> password_;
  std::optional<DevicePasswordType> password_type_;
  std::optional<std::string> block_value_;
  std::optional<std::string> update_block_number_;
  std::optional<std::string> timeout_;

};


// Generated class from Pigeon that represents data sent in messages.
class DeviceCameraScanResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  DeviceCameraScanResponse();

  // Constructs an object setting all fields.
  explicit DeviceCameraScanResponse(
    const std::string* response_code,
    const std::string* response_message,
    const std::string* barcode_data,
    const DeviceBarcodeType* barcode_type);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);

  const std::string* barcode_data() const;
  void set_barcode_data(const std::string_view* value_arg);
  void set_barcode_data(std::string_view value_arg);

  const DeviceBarcodeType* barcode_type() const;
  void set_barcode_type(const DeviceBarcodeType* value_arg);
  void set_barcode_type(const DeviceBarcodeType& value_arg);


 private:
  static DeviceCameraScanResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;
  std::optional<std::string> barcode_data_;
  std::optional<DeviceBarcodeType> barcode_type_;

};


// Generated class from Pigeon that represents data sent in messages.
class DeviceCardInsertDetectionResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  DeviceCardInsertDetectionResponse();

  // Constructs an object setting all fields.
  explicit DeviceCardInsertDetectionResponse(
    const std::string* response_code,
    const std::string* response_message,
    const DeviceCardInsertStatus* card_insert_status);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);

  const DeviceCardInsertStatus* card_insert_status() const;
  void set_card_insert_status(const DeviceCardInsertStatus* value_arg);
  void set_card_insert_status(const DeviceCardInsertStatus& value_arg);


 private:
  static DeviceCardInsertDetectionResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;
  std::optional<DeviceCardInsertStatus> card_insert_status_;

};


// Generated class from Pigeon that represents data sent in messages.
class DeviceMifareCardResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  DeviceMifareCardResponse();

  // Constructs an object setting all fields.
  explicit DeviceMifareCardResponse(
    const std::string* response_code,
    const std::string* response_message,
    const std::string* block_value);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);

  const std::string* block_value() const;
  void set_block_value(const std::string_view* value_arg);
  void set_block_value(std::string_view value_arg);


 private:
  static DeviceMifareCardResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;
  std::optional<std::string> block_value_;

};


// Generated class from Pigeon that represents data sent in messages.
class DevicePrinterResponse {
 public:
  // Constructs an object setting all non-nullable fields.
  DevicePrinterResponse();

  // Constructs an object setting all fields.
  explicit DevicePrinterResponse(
    const std::string* response_code,
    const std::string* response_message);

  const std::string* response_code() const;
  void set_response_code(const std::string_view* value_arg);
  void set_response_code(std::string_view value_arg);

  const std::string* response_message() const;
  void set_response_message(const std::string_view* value_arg);
  void set_response_message(std::string_view value_arg);


 private:
  static DevicePrinterResponse FromEncodableList(const flutter::EncodableList& list);
  flutter::EncodableList ToEncodableList() const;
  friend class POSLinkDeviceApi;
  friend class POSLinkDeviceApiCodecSerializer;
  std::optional<std::string> response_code_;
  std::optional<std::string> response_message_;

};

class POSLinkDeviceApiCodecSerializer : public flutter::StandardCodecSerializer {
 public:
  POSLinkDeviceApiCodecSerializer();
  inline static POSLinkDeviceApiCodecSerializer& GetInstance() {
    static POSLinkDeviceApiCodecSerializer sInstance;
    return sInstance;
  }

  void WriteValue(
    const flutter::EncodableValue& value,
    flutter::ByteStreamWriter* stream) const override;

 protected:
  flutter::EncodableValue ReadValueOfType(
    uint8_t type,
    flutter::ByteStreamReader* stream) const override;

};

// Generated interface from Pigeon that represents a handler of messages from Flutter.
class POSLinkDeviceApi {
 public:
  POSLinkDeviceApi(const POSLinkDeviceApi&) = delete;
  POSLinkDeviceApi& operator=(const POSLinkDeviceApi&) = delete;
  virtual ~POSLinkDeviceApi() {}
  virtual void MifareCard(
    const DeviceMifareCardRequest& req,
    std::function<void(ErrorOr<DeviceMifareCardResponse> reply)> result) = 0;
  virtual void CameraScan(
    const DeviceCameraScanRequest& req,
    std::function<void(ErrorOr<DeviceCameraScanResponse> reply)> result) = 0;
  virtual void Printer(
    const DevicePrinterRequest& req,
    std::function<void(ErrorOr<DevicePrinterResponse> reply)> result) = 0;
  virtual void CardInsertDetection(
    const DeviceCardInsertDetectionRequest& req,
    std::function<void(ErrorOr<DeviceCardInsertDetectionResponse> reply)> result) = 0;

  // The codec used by POSLinkDeviceApi.
  static const flutter::StandardMessageCodec& GetCodec();
  // Sets up an instance of `POSLinkDeviceApi` to handle messages through the `binary_messenger`.
  static void SetUp(
    flutter::BinaryMessenger* binary_messenger,
    POSLinkDeviceApi* api);
  static flutter::EncodableValue WrapError(std::string_view error_message);
  static flutter::EncodableValue WrapError(const FlutterError& error);

 protected:
  POSLinkDeviceApi() = default;

};
}  // namespace POSLinkDevice
#endif  // PIGEON_POSLINKDEVICE_H_
